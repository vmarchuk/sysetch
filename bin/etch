#!/bin/bash

function path-canonical-simple() 
{
	# http://blog.publicobject.com/2006/06/canonical-path-of-file-in-bash.html
	local dst="${1}"
	cd -P -- "$(dirname -- "${dst}")" &> /dev/null && echo "$(pwd -P)/$(basename -- "${dst}")"
}
function path-canonical() 
{
	local dst="$(path-canonical-simple "${1}")"

	while [[ -h "${dst}" ]]; do
		local linkDst="$(ls -l "${dst}" | sed -r -e 's/^.*[[:space:]]*->[[:space:]]*(.*)[[:space:]]*$/\1/g')"
		if [[ -z "$(echo "${linkDst}" | grep -E '^/')" ]]; then
			# relative link destination
			linkDst="$(dirname "${dst}")/${linkDst}"
		fi
		dst="$(path-canonical-simple "${linkDst}")"
	done
	echo "${dst}"
}

etch=$(path-canonical $0)
prefix=$(dirname $(dirname $etch))
env="$prefix/etc/etch/env"
[ -f $env ] && source $env
[ -n "$PERL" ] || PERL=/usr/bin/perl
[ -x $PERL ] && ETCH=$0 PERLLIB=$prefix/lib/perl exec $PERL $etch.pl

echo "ERROR: Unable to find perl binary!"
exit 5

